// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: internal/proto/file.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileId) Reset() {
	*x = FileId{}
	mi := &file_internal_proto_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileId) ProtoMessage() {}

func (x *FileId) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileId.ProtoReflect.Descriptor instead.
func (*FileId) Descriptor() ([]byte, []int) {
	return file_internal_proto_file_proto_rawDescGZIP(), []int{0}
}

func (x *FileId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *FileId                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Login         string                 `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Created       uint64                 `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified      uint64                 `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Size          uint64                 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Comment       string                 `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_internal_proto_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_internal_proto_file_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetId() *FileId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *FileInfo) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FileInfo) GetModified() uint64 {
	if x != nil {
		return x.Modified
	}
	return 0
}

func (x *FileInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type FileStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*FileStream_Info
	//	*FileStream_ChunkData
	Data          isFileStream_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStream) Reset() {
	*x = FileStream{}
	mi := &file_internal_proto_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStream) ProtoMessage() {}

func (x *FileStream) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStream.ProtoReflect.Descriptor instead.
func (*FileStream) Descriptor() ([]byte, []int) {
	return file_internal_proto_file_proto_rawDescGZIP(), []int{2}
}

func (x *FileStream) GetData() isFileStream_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileStream) GetInfo() *FileInfo {
	if x != nil {
		if x, ok := x.Data.(*FileStream_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *FileStream) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Data.(*FileStream_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isFileStream_Data interface {
	isFileStream_Data()
}

type FileStream_Info struct {
	Info *FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type FileStream_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*FileStream_Info) isFileStream_Data() {}

func (*FileStream_ChunkData) isFileStream_Data() {}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *FileId                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_internal_proto_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_file_proto_rawDescGZIP(), []int{3}
}

func (x *UploadResponse) GetId() *FileId {
	if x != nil {
		return x.Id
	}
	return nil
}

type ListFiles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFiles) Reset() {
	*x = ListFiles{}
	mi := &file_internal_proto_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFiles) ProtoMessage() {}

func (x *ListFiles) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFiles.ProtoReflect.Descriptor instead.
func (*ListFiles) Descriptor() ([]byte, []int) {
	return file_internal_proto_file_proto_rawDescGZIP(), []int{4}
}

func (x *ListFiles) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_internal_proto_file_proto protoreflect.FileDescriptor

const file_internal_proto_file_proto_rawDesc = "" +
	"\n" +
	"\x19internal/proto/file.proto\x12\x04file\"\x18\n" +
	"\x06FileId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xbe\x01\n" +
	"\bFileInfo\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.file.FileIdR\x02id\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x14\n" +
	"\x05login\x18\x03 \x01(\tR\x05login\x12\x18\n" +
	"\acreated\x18\x04 \x01(\x04R\acreated\x12\x1a\n" +
	"\bmodified\x18\x05 \x01(\x04R\bmodified\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x04R\x04size\x12\x18\n" +
	"\acomment\x18\a \x01(\tR\acomment\"[\n" +
	"\n" +
	"FileStream\x12$\n" +
	"\x04info\x18\x01 \x01(\v2\x0e.file.FileInfoH\x00R\x04info\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\x06\n" +
	"\x04data\".\n" +
	"\x0eUploadResponse\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.file.FileIdR\x02id\"1\n" +
	"\tListFiles\x12$\n" +
	"\x05files\x18\x01 \x03(\v2\x0e.file.FileInfoR\x05filesB\n" +
	"Z\b./;protob\x06proto3"

var (
	file_internal_proto_file_proto_rawDescOnce sync.Once
	file_internal_proto_file_proto_rawDescData []byte
)

func file_internal_proto_file_proto_rawDescGZIP() []byte {
	file_internal_proto_file_proto_rawDescOnce.Do(func() {
		file_internal_proto_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_proto_file_proto_rawDesc), len(file_internal_proto_file_proto_rawDesc)))
	})
	return file_internal_proto_file_proto_rawDescData
}

var file_internal_proto_file_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_internal_proto_file_proto_goTypes = []any{
	(*FileId)(nil),         // 0: file.FileId
	(*FileInfo)(nil),       // 1: file.FileInfo
	(*FileStream)(nil),     // 2: file.FileStream
	(*UploadResponse)(nil), // 3: file.UploadResponse
	(*ListFiles)(nil),      // 4: file.ListFiles
}
var file_internal_proto_file_proto_depIdxs = []int32{
	0, // 0: file.FileInfo.id:type_name -> file.FileId
	1, // 1: file.FileStream.info:type_name -> file.FileInfo
	0, // 2: file.UploadResponse.id:type_name -> file.FileId
	1, // 3: file.ListFiles.files:type_name -> file.FileInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_proto_file_proto_init() }
func file_internal_proto_file_proto_init() {
	if File_internal_proto_file_proto != nil {
		return
	}
	file_internal_proto_file_proto_msgTypes[2].OneofWrappers = []any{
		(*FileStream_Info)(nil),
		(*FileStream_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_proto_file_proto_rawDesc), len(file_internal_proto_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_proto_file_proto_goTypes,
		DependencyIndexes: file_internal_proto_file_proto_depIdxs,
		MessageInfos:      file_internal_proto_file_proto_msgTypes,
	}.Build()
	File_internal_proto_file_proto = out.File
	file_internal_proto_file_proto_goTypes = nil
	file_internal_proto_file_proto_depIdxs = nil
}
